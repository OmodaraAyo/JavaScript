There are two ways to declare a function in javaScript
______________________________________________________

-> function declaration
-> function expression

function declaration:
	console.log(outerFunction());

function expression : 
	
	const number = outerFunction();

-----------------------------------------------------------------------------
-> Nested Function
	function outerFuction(){
		console.log("outer function");
		function innerFunction(){
			console.log("inner function");
		}
		return innerFunction();
	}

-----------------------------------------------------------------------------

-> Arrow function

	const result = (numOne, numTwo) => {
		return numOne * numTwo;
	}
console.log(reesult(2,3))
------------------------------------------------------------------------------
-> function that returns object
function calculate(){
	return{
		add: function(a,b){
			return a + b;
		},
		subtract:(a,b) => {
			return a - b;
		}
		subtract2:(a,b) => {return a - b}
	};
};
let result = calculate();
console.log(result.add(1,2))
console.log(result.subtract(5,2))

-------------------------------------------------------------------------------
-> function as an Argument

-------------------------------------------------------------------------------
TESTING IN JAVASCRIPT
-------------------------------------------------------------------------------
const add = require("./index.js")

{add, subtract} ---- Is called destructring

the test takes in two parameters description and callback function

test("Add two numbers", ()=>{

	- Arrange
	- Act
	- Assert

	let numberOne = 2;
	let numberTwo = 29;
	let result = add(numberOne,numberTwo);
	expect(result).toBe(31);

})
-------------------------------------------------------------------------------
To run test on javascript you use this...

-> npm runtest
-> run test
-> npm run test (Filename.test).js

-------------------------------------------------------------------------------
Strict checks the value and the data type (===)

int === int
int === String ("Bad operand.")